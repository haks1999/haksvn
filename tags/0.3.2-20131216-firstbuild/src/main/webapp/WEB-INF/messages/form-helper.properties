helper.repository.repositoryKey=Repository Key for identification. cannot change after creation.
helper.repository.location=Root URL of repository. ( eg. svn://127.0.0.1/svn ) <br>If multiple projects in a repository, create each haksvn repository.
helper.repository.trunkPath=Relative trunk path of this repository location. The source committed in this trunk path is for development environment, not for production. ( eg. /trunk )
helper.repository.tagsPath=Relative tags path of this repository location. This is using in [Transfer > tagging] menu for creating tagging of current production branches( eg. /tags )   
helper.repository.branchesPath=Relative branches path of this repository location. This path is only committed by haksvn transfer process and used for production deploy ( eg. /branches/production )
helper.repository.syncUser=Synchronize user and auth data between haksvn and subversion repository. Before using this function, backup user/auth data in subversion repository. ( usually in passwd, authz file )
helper.repository.authzTemplate=Subversion authz file will be overwritten by this template. There are three authority groups in haksvn.<ul><li><b>system-admin:</b> all sorts of rights</li><li><b>reviewer:</b> approve requests and create taggings </li><li><b>commiter:</b> request for transfer production branches</li> </ul> 
helper.repository.authzTemplateVariables=You can use variables in below list.<ul><li><b>#system-admin#:</b> haksvn system-admin user id list</li><li><b>#commiter#:</b> haksvn commiter user id list</li><li><b>#reviewer#:</b> haksvn reviewer user id list</li><li><b>#svn_name#: </b>relative svn path from repository root to repository location.</li><li><b>#trunk_path#: </b>trunk path in repository information</li><li><b>#branches_path#: </b>branches path in repository information</li><li><b>#tags_path#: </b>tags path in repository information</li></ul>
helper.general.commitLogTemplateVariables=<ul><li>available variables in <strong><i><u>Transfer Commit Log</u></i></strong><ul><li><b>#request-group-id#: </b>haksvn request group ID</li><li><b>#request-id#: </b>haksvn request ID</li><li><b>#request-user-id#: </b>user ID who requested transfer(usually commiter)</li><li><b>#request-user-name#: </b>user name who requested transfer(usually commiter)</li><li><b>#approve-user-id#: </b>user ID who approved request(usually reviewer)</li><li><b>#approve-user-name#: </b>user name who approved request(usually reviewer)</li><li><b>#transfer-user-id#: </b>user ID who transferred request-group(usually reviewer)</li><li><b>#transfer-user-name#: </b>user name who transferred request-group(usually reviewer)</li><li><b>#description#: </b>description in request form</li></ul></li><li>available variables in <strong><i><u>Tagging Commit Log</u></i></strong><ul><li><b>#tagging-id#: </b>haksvn tagging ID</li><li><b>#tagging-user-id#: </b>user ID who tagged(usually reviewer)</li><li><b>#tagging-user-name#: </b>user name who tagged(usually commiter)</li><li><b>#description#: </b>description in tagging form</li></ul></li></ul>
helper.general.mailTemplateVariables=<ul><li>available variables in <strong><i><u>Review Request</u></i></strong><ul><li><b>#repository-key#: </b>haksvn Repository key</li><li><b>#revision#: </b>subversion revision</li></ul></li></ul>
helper.general.mailNoticeType=<ul><li><strong><i><u>Review Request</u></i></strong><ul><li>When requesting a review</li><li>Recipient: selected users</li></ul></li><li><strong><i><u>Transfer Request</u></i></strong><ul><li>When committer requesting a transfer to reviewer</li><li>Recipient: selected users</li></ul></li><li><strong><i><u>Transfer Reject</u></i></strong><ul><li>When reviewer rejecting a transfer request</li><li>Recipient: A user who has requested</li></ul></li><li><strong><i><u>Transfer Approve</u></i></strong><ul><li>When reviewer approving a transfer request</li><li>Recipient: A user who has requested</li></ul></li><li><strong><i><u>Transfer Complete</u></i></strong><ul><li>When transfer completing</li><li>Recipient: All users who have requested or approved</li></ul></li></ul>
helper.user.authType=There are three authority groups in haksvn.<ul><li><b>system-admin:</b> all sorts of rights</li><li><b>reviewer:</b> approve requests and create taggings </li><li><b>commiter:</b> request for transfer production branches</li> </ul>
helper.transfer.state=There are five steps in transferring request.<dl><dt><b>1. Keep</b></dt><dd>a commiter created request and save for later. Owner can add or remove source.</dd><dt><b>2. Request</b></dt><dd>transfer requested and waits for approve. cannot modify source list.</dd><dt><b>3. Approved</b></dt><dd>transfer is approved and ready for include in RequestGroup.</dd><dt><b>4. Stand by</b></dt><dd>transfer is included in RequestGroup.</dd><dt><b>5. Transfered</b></dt><dd>transfer is completed. cannot be undone.</dd></dl>
helper.transfer.type=<ul><li><b>Normal: </b>normal transfer request.</li><li><b>Emergency: </b>emergency type request does not need to be included in RequestGroup. when approving this request, transfer to production automatically.</li></ul>
helper.transfer.description=This description will be used for transfer log.(subversion commit log) 
helper.transferGroup.state=There are two steps in transferring request group.<dl><dt><b>1. Stand by</b></dt><dd>transfer group is created and add or remove request.</dd><dt><b>2. Transfered</b></dt><dd>transfer is completed. cannot be undone.</dd></dl>
helper.transferGroup.type=<ul><li><b>Normal: </b>normal transfer request.</li><li><b>Scheduled: </b>transfer requests at scheduled time. ( not implemented yet )</li><li><b>Emergency: </b>emergency type request does not need to be included in RequestGroup. when approving this request, transfer to production automatically.</li></ul>
helper.tagging.type=<ul><li><b>Create: </b>create tagging from production branches (copy production branches to new tags)</li><li><b>Restore: </b>restore production branches from selected tags (copy tags to production branches)</li></ul>
helper.tagging.name=tag name for subversion.
helper.tagging.description=This description will be used for tagging log.(subversion commit log)